{
  "version": 3,
  "sources": ["../src/utils.js", "../src/proxy-trap.js", "../src/patch.js", "../src/inject.js", "../src/index.js"],
  "sourcesContent": ["\nconst ATTR = 'hp-live'\nconst ID = 'hp-id'\nconst DILEM = '|'\nconst FN = 'fn'\n\nexport default {\n  random () {\n    const min = Date.now()\n    return Math.round(Math.random() * (9999999999999 - min) + min).toString(36)\n  },\n\n  debounce (callback, wait = 0) {\n    let timeout = null\n\n    return function () {\n      const next = () => callback.apply(this, arguments)\n      if (timeout) clearTimeout(timeout)\n      timeout = setTimeout(next, wait)\n    }\n  },\n\n  getShadow (html) {\n    const $tmp = document.createElement('div')\n    $tmp.innerHTML = html\n    return $tmp\n  },\n\n  setAttrTrigger ($el, attr, triggers) {\n    $el.setAttribute(ID, this.random())\n\n    triggers = triggers.map(trigger => trigger.endsWith(')') ? FN : trigger\n    ).join(',')\n\n    const existing = $el.getAttribute(ATTR) ? $el.getAttribute(ATTR).split(DILEM) : []\n    $el.setAttribute(ATTR, existing.concat(`${attr}:${triggers}`).join(DILEM))\n  },\n\n  attrQuery: (changed) => changed.map(path => `[${ATTR}*=\":${path}\"]`).concat(`[${ATTR}*=\":*\"]`).join(),\n\n  // textQuery: (changed) => changed.map(path => `[hp-text*=\"${path}\"]`).concat(`[hp-text*=\"*\"]`).join(),\n\n  // NOT SURE IF WE NEED THIS STUFF\n\n  // hotAttrs ($el) {\n  //   const val = $el.getAttribute(ATTR)\n  //   return val ? val.split(',').reduce((acc, pair) => {\n  //     const [att, trigger] = pair.split(':')\n  //     acc[att] = trigger\n  //     return acc\n  //   }, {}) : null\n  // },\n\n  getMatch: ($el) => document.querySelector(`[${ID}=\"${$el.getAttribute(ID)}\"]`)\n\n}\n", "\nimport Utils from './utils.js'\n\nexport default {\n  create (data, callback) {\n    let que = []\n\n    const _debounced = Utils.debounce(() => {\n      callback(que)\n      que = []\n    }, 10)\n\n    const _addToQue = path => {\n      if (!que.includes(path)) que.push(path)\n      _debounced(que)\n    }\n\n    function _buildProxy (raw, tree = []) {\n      return new Proxy(raw, {\n        get: function (target, prop) {\n          const value = Reflect.get(...arguments)\n\n          if (value && typeof value === 'object' && ['Array', 'Object'].includes(value.constructor.name)) {\n            return _buildProxy(value, tree.concat(prop))\n          }\n\n          return value\n        },\n\n        set: function (target, prop, value) {\n          const ret = Reflect.set(...arguments)\n          const path = tree.concat(prop).join('.')\n          _addToQue(path)\n          return ret\n        },\n\n        deleteProperty: function (target, prop) {\n          const ret = Reflect.deleteProperty(...arguments)\n          const path = tree.concat(prop).join('.')\n          _addToQue(path)\n          return ret\n        }\n      })\n    }\n\n    return _buildProxy(data)\n  }\n}\n", "\nimport Utils from './utils.js'\n\nexport default function ($vTree, changed, trace) {\n  $vTree.querySelectorAll(Utils.attrQuery(changed)).forEach($v => {\n    const $r = Utils.getMatch($v)\n    const attrs = Utils.hotAttrs($r)\n\n    if (trace) {\n      console.log('patching attributes:', attrs)\n      console.log($r)\n    }\n\n    Object.keys(attrs).forEach(key => {\n      if (key === 'value') $r.value = $v.value\n      else $r.setAttribute(key, $v.getAttribute(key))\n    })\n  })\n\n  $vTree.querySelectorAll(Utils.textQuery(changed)).forEach($v => {\n    const $r = Utils.getMatch($v)\n\n    if (trace) {\n      console.log('patching text:', $r.getAttribute('hp-text'))\n      console.log($r)\n    }\n\n    if ($r) $r.innerText = $v.innerText\n  })\n}\n", "\nimport Utils from './utils.js'\nconst TXT_VALUE = ['TEXTAREA']\n\nexport default function (tpl, parser) {\n  function _getKeys (outlets) {\n    outlets = outlets || []\n    return outlets.map(match => match.replace(parser.outlet, (match, path) => path))\n  }\n\n  function _handleProps ($el) {\n    const dynamic = Array.from($el.attributes).reduce((acc, att) => {\n      const {name, value} = att\n      const keys = _getKeys(att.value.match(parser.outlet))\n      if (keys.length) acc[name] = keys\n      return acc\n    }, {})\n\n    if (Object.keys(dynamic).length) {\n      Object.entries(dynamic).forEach(([key, triggers]) => {\n        Utils.setAttrTrigger($el, key, triggers)\n      })\n    }\n  }\n\n  function _textNode ($el) {\n    const $parent = $el.parentElement\n    const matches = $el.textContent.match(parser.outlet)\n\n    if (matches && matches.length) {\n      const triggers = _getKeys(matches)\n\n      if ($parent && TXT_VALUE.includes($parent.tagName)) {\n        Utils.setAttrTrigger($parent, 'value', triggers)\n      } else {\n        const $wrapper = document.createElement('span')\n        Utils.setAttrTrigger($wrapper, 'text', triggers)\n        $el.parentNode.insertBefore($wrapper, $el)\n        $wrapper.append($el)\n      }\n    } else {\n      const iterations = $el.textContent.match(parser.iterate)\n      if (iterations && iterations.length) {\n        const $parent = $el.parentNode\n        $el.parentNode.setAttribute('hp-id', Utils.random())\n        iterations.forEach(match => {\n          $el.parentNode.setAttribute('hp-iterate', Array.from(iterations).map(match => {\n            return match.replace(parser.iterate, (match, key) => key)\n          }).join(','))\n        })\n      }\n    }\n  }\n\n  function _injectNode ($el) {\n    if ($el.nodeType === Node.TEXT_NODE) _textNode($el)\n    else _handleProps($el)\n\n    Array.from($el.childNodes).forEach(_injectNode)\n  }\n\n  const $shadow = Utils.getShadow(tpl)\n  const cleanup = parser.cleanup || []\n\n  Array.from($shadow.childNodes).forEach(_injectNode)\n  let injected = $shadow.innerHTML\n\n  cleanup.forEach(({search, replace}) => {\n    injected = injected.replace(search, replace)\n  })\n  return injected\n}\n", "\nimport Utils from './utils.js'\nimport ProxyTrap from './proxy-trap.js'\nimport Patch from './patch.js'\nimport Inject from './inject.js'\n\nexport default {\n  parse (template, parser) {\n    return Inject(template, parser)\n  },\n\n  app ({template, data, parser, render, trace}) {\n    const injected = this.parse(template, parser, store)\n\n    const trap = ProxyTrap.create(data, function (changed) {\n      const $v = Utils.getShadow(render(injected, trap))\n      const startTime = new Date().getTime()\n\n      if (trace) {\n        console.group('changed:', changed)\n        console.log('vDom', $v)\n      }\n\n      Patch($v, changed, trace)\n\n      if (trace) {\n        const endTime = new Date().getTime()\n        console.log('re-render took:', (endTime - startTime), 'ms')\n        console.groupEnd()\n      }\n    })\n\n    return {data: trap, template: injected }\n  }\n\n}\n"],
  "mappings": "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",
  "names": []
}
